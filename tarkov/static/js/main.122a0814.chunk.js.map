{"version":3,"sources":["styles/config.ts","styles/root.js","components/TextInput/index.tsx","views/App/index.tsx","index.tsx"],"names":["size","createGlobalStyle","sc","value","onChange","className","Container","styled","input","App","useState","results","setResults","setValue","some","setSome","onAdd","String","Number","TextInput","ev","val","target","filtered","data","filter","item","compare","shortName","name","length","Results","map","Actions","DoneInput","Total","type","onClick","getTotal","quests","hideout","id","str1","str2","toLowerCase","includes","arr","reduce","acc","quantity","div","ul","props","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"myrCAEe,EACJ,UADI,EAEF,UAFE,EAMD,UANC,EAON,UAPM,EAQJ,UARI,EAUF,UAVE,EAWD,2BAXC,EAYC,OAZD,EAkBH,OAlBG,EAwBJ,SAACA,GAAD,gBA1BE,EA0BwBA,EAA1B,OCvBIC,cAAf,o7BAEaC,EACIA,EAEEA,EAkBNA,EACWA,G,OCjBT,cAA4C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UACjC,OACE,cAACC,EAAD,CACEH,MAAOA,EACPC,SAAUA,EACVC,UAAWA,KAKXC,EAAYC,IAAOC,MAAV,8LAEFN,EAAW,GAEFA,EAIFA,G,QCiDLO,EAnDH,WAAO,IAAD,EACcC,mBAAqB,IADnC,mBACTC,EADS,KACAC,EADA,OAEUF,mBAAS,IAFnB,mBAETP,EAFS,KAEFU,EAFE,OAGQH,mBAAS,IAHjB,mBAGTI,EAHS,KAGHC,EAHG,KAmBVC,EAAQ,WACZD,EAAQE,OAAOC,OAAOJ,GAAQ,KAGhC,OACE,eAAC,EAAD,WACE,cAACK,EAAD,CACEhB,MAAOA,EACPC,SAtBW,SAACgB,GAChB,IAAMC,EAAMD,EAAGE,OAAOnB,MAGtB,GAFAU,EAASQ,GAEJA,EAEE,CACL,IAAME,EAAwBC,EAAoBC,QAAO,SAAAC,GACvD,OAAOC,EAAQD,EAAKE,UAAWP,IAAQM,EAAQD,EAAKG,KAAMR,MAE5DT,EAAWW,QALXX,EAAW,OAoBTD,EAAQmB,OACR,cAACC,EAAD,UACIpB,EAAQqB,KAAI,SAAAN,GAAI,OAChB,+BACE,iCAAOA,EAAKG,KAAZ,KAAoBH,EAAKE,UAAzB,OACA,eAACK,EAAD,WACE,cAACC,EAAD,CACE/B,MAAOW,EACPV,SAAU,SAAAgB,GAAE,OAAIL,EAAQK,EAAGE,OAAOnB,UAEpC,cAACgC,EAAD,CAAOC,KAAK,QAAQC,QAASrB,EAA7B,SAAqCsB,EAASZ,EAAKa,UACnD,cAACJ,EAAD,CAAOC,KAAK,UAAUC,QAASrB,EAA/B,SAAuCsB,EAASZ,EAAKc,gBARhDd,EAAKe,SAahB,SAOJd,EAAU,SAACe,EAAcC,GAC7B,OAAOD,EAAKE,cAAcC,SAASF,EAAKC,gBAG1C,SAASN,EAASQ,GAChB,OAAKA,EAIEA,EAAIC,QAAO,SAACC,EAAUtB,GAAX,OAAiCsB,EAAOtB,EAAKuB,WAAU,GAHhE,EAMX,IAAM3C,EAAYC,IAAO2C,IAAV,4CACFhD,EAAW,IAGlB6B,EAAUxB,IAAO4C,GAAV,0NACGjD,EAAW,GACLA,EAMPA,EAAW,GACNA,EAAW,IAIzB+B,EAAU1B,IAAO2C,IAAV,0DAEJhD,EAAW,IAGdiC,EAAQ5B,IAAO2C,IAAV,qOAGAhD,EAAW,GACVA,EAAW,GACNA,EAAW,KACjBA,GAGW,SAAAkD,GAAK,MAAmB,UAAfA,EAAMhB,KAAmBlC,EAAWA,KAM7DgC,EAAY3B,YAAOY,EAAPZ,CAAH,wFACJL,EAAW,I,MC1HtBmD,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.122a0814.chunk.js","sourcesContent":["const BASE = 8\n\nexport default {\n  primary: '#eae0d5',\n  secondary: '#c6ac8f',\n  tertiary: '#',\n\n  // colors\n  background: '#22333b',\n  quest: '#ff3333',\n  hideout: '#a6a6a6',\n\n  fontColor: '#eae0d5',\n  fontFamily: \"'Inconsolata', monospace\",\n  fontContrast: '#000',\n\n  // fonts\n  fontSizeSmallest: '12px',\n  fontSizeSmaller: '16px',\n  fontSizeSmall: '20px',\n  fontSize: '24px',\n  fontSizeLarge: '28px',\n  fontSizeLarger: '32px',\n  fontSizeLargest: '36px',\n\n  // spacing\n  spacing: (size: number) => `${BASE*size}px`,\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { sc } from '.'\n\nexport default createGlobalStyle`\n  html, body, input, textarea, select, button {\n    color: ${sc.fontColor};\n    font-size: ${sc.fontSize};\n    font-weight: 500;\n    font-family: ${sc.fontFamily};\n    text-rendering: optimizeLegibility;\n\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body * {\n    box-sizing: border-box;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n  }\n\n  html, body {\n    -webkit-font-smoothing: antialiased;\n    -webkit-text-size-adjust: none;\n    -webkit-touch-callout: none;\n    -ms-user-select: none;\n    min-height: 100vh;\n\n    color: ${sc.fontColor};\n    background-color: ${sc.background};\n\n    width: 100%;\n    padding: 0;\n    margin: 0;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n    padding: 0;\n    font-weight: 300;\n  }\n\n  :focus {\n    outline-width: 0;\n  }\n\n  a {\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  b, strong {\n    font-weight: 400;\n  }\n`\n","import React, { ChangeEvent } from 'react'\nimport styled from 'styled-components'\nimport { sc } from 'src/styles'\n\ntype Props = {\n  value: string\n  onChange: (ev: ChangeEvent<HTMLInputElement>) => void\n  className?: string\n}\n\nexport default ({ value, onChange, className }: Props) => {\n  return (\n    <Container\n      value={value}\n      onChange={onChange}\n      className={className}\n    />\n  )\n}\n\nconst Container = styled.input`\n  width: 100%;\n  padding: ${sc.spacing(1)};\n  background-color: #000;\n  border: 1px solid ${sc.secondary};\n  transition: all 100ms linear;\n\n  &:focus {\n    border-color: ${sc.primary};\n  }\n`\n","import React, { ChangeEvent, useState } from 'react'\nimport styled from 'styled-components'\nimport { sc } from 'src/styles'\nimport { TextInput } from 'src/components'\nimport data from 'src/data.json'\n\ntype Quest = {\n  fir: boolean\n  title: string\n  quantity: number\n}\n\ntype Hideout = {\n  level: number\n  module: string\n  quantity: number\n}\n\ntype DataItem = {\n  id: string\n  name: string\n  shortName: string\n  quests?: Quest[]\n  hideout?: Hideout[]\n}\n\nconst App = () => {\n  const [results, setResults] = useState<DataItem[]>([])\n  const [value, setValue] = useState('')\n  const [some, setSome] = useState('')\n\n  const onSearch = (ev: ChangeEvent<HTMLInputElement>) => {\n    const val = ev.target.value\n    setValue(val)\n\n    if (!val) {\n      setResults([])\n    } else {\n      const filtered: DataItem[] = (data as DataItem[]).filter(item => {\n        return compare(item.shortName, val) || compare(item.name, val)\n      })\n      setResults(filtered)\n    }\n  }\n\n  const onAdd = () => {\n    setSome(String(Number(some) + 1))\n  }\n\n  return (\n    <Container>\n      <TextInput\n        value={value}\n        onChange={onSearch}\n      />\n\n      { results.length ? (\n        <Results>\n          { results.map(item => (\n            <li key={item.id}>\n              <span>{item.name} ({item.shortName})</span>\n              <Actions>\n                <DoneInput\n                  value={some}\n                  onChange={ev => setSome(ev.target.value)}\n                />\n                <Total type=\"quest\" onClick={onAdd}>{getTotal(item.quests)}</Total>\n                <Total type=\"hideout\" onClick={onAdd}>{getTotal(item.hideout)}</Total>\n              </Actions>\n            </li>\n          )) }\n        </Results>\n      ) : null }\n    </Container>\n  )\n}\n\nexport default App\n\nconst compare = (str1: string, str2: string): boolean => {\n  return str1.toLowerCase().includes(str2.toLowerCase())\n}\n\nfunction getTotal(arr: any): number {\n  if (!arr) {\n    return 0\n  }\n\n  return arr.reduce((acc: any, item: any): number => acc += item.quantity, 0)\n}\n\nconst Container = styled.div`\n  padding: ${sc.spacing(3)};\n`\n\nconst Results = styled.ul`\n  margin-top: ${sc.spacing(2)};\n  border: 1px solid ${sc.secondary};\n\n  & > li {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: ${sc.spacing(1)};\n    padding-left: ${sc.spacing(2)};\n  }\n`\n\nconst Actions = styled.div`\n  display: flex;\n  gap: ${sc.spacing(1)};\n`\n\nconst Total = styled.div<{\n  type: 'quest' | 'hideout'\n}>`\n  width: ${sc.spacing(6)};\n  height: ${sc.spacing(6)};\n  line-height: ${sc.spacing(5.5)};\n  color: ${sc.fontContrast};\n  font-weight: 600;\n  border-radius: 3px;\n  background-color: ${props => props.type === 'quest' ? sc.quest : sc.hideout};\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n`\n\nconst DoneInput = styled(TextInput)`\n  width: ${sc.spacing(6)};\n  border-radius: 4px;\n  text-align: center;\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './views/App'\nimport { GlobalStyle } from './styles'\n\nimport 'normalize.css/normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}