{"version":3,"sources":["context/context.ts","context/useData.ts","context/Provider.tsx","styles/config.ts","styles/root.js","components/TextInput/index.tsx","views/App/helpers.ts","views/App/Collected/Item.tsx","views/App/Collected/index.tsx","views/App/ResultItem/index.tsx","views/App/index.tsx","client.tsx","index.tsx"],"names":["context","createContext","data","setData","Provider","Consumer","useContext","add","key","updated","localStorage","setItem","JSON","stringify","update","value","children","size","createGlobalStyle","sc","onChange","className","Container","styled","input","getQuestQuant","item","quests","length","reduce","acc","quest","quantity","getHideoutQuant","hideout","onSearch","useData","id","shortName","questTotal","hideoutTotal","done","onClick","Values","toLocaleString","li","props","div","Object","keys","collectedItems","map","items","find","x","Item","onAdd","name","Actions","DoneInput","String","ev","val","target","Number","Total","type","TextInput","App","useState","search","setSearch","results","setResults","filtered","filter","compare","Collected","Search","Results","ResultItem","str1","str2","toLowerCase","includes","ul","storage","parse","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be02aca1.chunk.js","sourcesContent":["import { Context, createContext } from 'react'\n\nconst context: Context<any> = createContext({\n  data: {},\n  setData: () => {},\n})\n\nconst { Provider, Consumer } = context\n\nexport { context, Provider, Consumer }\n","import { useContext } from 'react'\nimport { context } from './context'\n\nexport default () => {\n  const { data, setData } = useContext(context)\n\n  return {\n    data,\n    add: (key: string) => {\n      const updated = { ...data }\n\n      if (!updated[key]) {\n        updated[key] = 0\n      }\n\n      updated[key] += 1\n      setData(updated)\n      // TODO: constants\n      localStorage.setItem('tarkov-tracker-data', JSON.stringify(updated))\n    },\n    update: (key: string, value: number) => {\n      const updated = { ...data }\n\n      if (!value) {\n        delete updated[key]\n      } else {\n        updated[key] = value\n      }\n\n      setData(updated)\n      // TODO: constants\n      localStorage.setItem('tarkov-tracker-data', JSON.stringify(updated))\n    },\n  }\n}\n","import React, { Dispatch, SetStateAction, ReactNode } from 'react'\nimport { StorageData } from 'src/types'\nimport { Provider } from './context'\n\ntype DataContext = {\n  data: StorageData\n  setData: Dispatch<SetStateAction<StorageData>>\n}\n\ntype Props = {\n  value: DataContext\n  children: ReactNode\n}\n\nexport default ({ value, children }: Props): JSX.Element => (\n  <Provider value={value}>{children}</Provider>\n)\n","const BASE = 8\n\nexport default {\n  primary: '#eae0d5',\n  secondary: '#c6ac8f',\n  tertiary: '#',\n\n  // colors\n  background: '#22333b',\n  quest: '#ff3333',\n  hideout: '#a6a6a6',\n\n  fontColor: '#eae0d5',\n  fontFamily: \"'Inconsolata', monospace\",\n  fontContrast: '#000',\n\n  // fonts\n  fontSizeSmallest: '12px',\n  fontSizeSmaller: '16px',\n  fontSizeSmall: '20px',\n  fontSize: '24px',\n  fontSizeLarge: '28px',\n  fontSizeLarger: '32px',\n  fontSizeLargest: '36px',\n\n  // spacing\n  spacing: (size: number) => `${BASE * size}px`,\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { sc } from '.'\n\nexport default createGlobalStyle`\n  html, body, input, textarea, select, button {\n    color: ${sc.fontColor};\n    font-size: ${sc.fontSize};\n    font-weight: 500;\n    font-family: ${sc.fontFamily};\n    text-rendering: optimizeLegibility;\n\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body * {\n    box-sizing: border-box;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n  }\n\n  html, body {\n    -webkit-font-smoothing: antialiased;\n    -webkit-text-size-adjust: none;\n    -webkit-touch-callout: none;\n    -ms-user-select: none;\n    min-height: 100vh;\n\n    color: ${sc.fontColor};\n    background-color: ${sc.background};\n\n    width: 100%;\n    padding: 0;\n    margin: 0;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n    padding: 0;\n    font-weight: 300;\n  }\n\n  :focus {\n    outline-width: 0;\n  }\n\n  a {\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  b, strong {\n    font-weight: 400;\n  }\n`\n","import React, { ChangeEvent } from 'react'\nimport styled from 'styled-components'\nimport { sc } from 'src/styles'\n\ntype Props = {\n  value: string\n  onChange: (ev: ChangeEvent<HTMLInputElement>) => void\n  className?: string\n}\n\nexport default ({ value, onChange, className }: Props) => {\n  return <Container value={value} onChange={onChange} className={className} />\n}\n\nconst Container = styled.input`\n  width: 100%;\n  padding: ${sc.spacing(1)};\n  background-color: #000;\n  border: 1px solid ${sc.secondary};\n  transition: all 100ms linear;\n\n  &:focus {\n    border-color: ${sc.primary};\n  }\n`\n","import { DataItem } from 'src/types'\n\nexport const getQuestQuant = (item: DataItem): number => {\n  if (!item.quests?.length) {\n    return 0\n  }\n\n  return item.quests.reduce((acc, quest) => (acc += quest.quantity), 0)\n}\n\nexport const getHideoutQuant = (item: DataItem): number => {\n  if (!item.hideout?.length) {\n    return 0\n  }\n\n  return item.hideout.reduce((acc, hideout) => (acc += hideout.quantity), 0)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useData } from 'src/context'\nimport { sc } from 'src/styles'\nimport { DataItem } from 'src/types'\n\nimport { getQuestQuant, getHideoutQuant } from '../helpers'\n\ntype Props = {\n  item?: DataItem\n  onSearch: (val: string) => void\n}\n\nexport default ({ item, onSearch }: Props) => {\n  const { data } = useData()\n\n  if (!item) {\n    return null\n  }\n\n  const { id, shortName } = item\n  const quantity = data[id]\n  const questTotal = getQuestQuant(item)\n  const hideoutTotal = getHideoutQuant(item)\n\n  return (\n    <Container\n      key={id}\n      done={quantity >= questTotal}\n      onClick={() => onSearch(shortName)}\n    >\n      <span>{item?.shortName}</span>\n      <Values>\n        <span>{quantity}</span>\n        <span>/</span>\n        <span>{questTotal.toLocaleString('en-US')}</span>\n        <span>/</span>\n        <span>{hideoutTotal.toLocaleString('en-US')}</span>\n      </Values>\n    </Container>\n  )\n}\n\nconst Container = styled.li<{\n  done: boolean\n}>`\n  display: flex;\n  justify-content: space-between;\n  padding: ${sc.spacing(1)};\n  border-bottom: 1px solid ${sc.secondary};\n\n  opacity: ${props => (props.done ? 0.3 : 1)};\n  cursor: pointer;\n\n  &:last-child {\n    border: none;\n  }\n`\n\nconst Values = styled.div`\n  display: flex;\n  gap: ${sc.spacing(1)};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useData } from 'src/context'\nimport { sc } from 'src/styles'\nimport items from 'src/data.json'\n\nimport Item from './Item'\n\ntype Props = {\n  onSearch: (val: string) => void\n}\n\nexport default ({ onSearch }: Props) => {\n  const { data } = useData()\n\n  if (!Object.keys(data).length) {\n    return null\n  }\n\n  const collectedItems = Object.keys(data).map(key =>\n    items.find(x => x.id === key)\n  )\n\n  return (\n    <Container>\n      <ul>\n        {collectedItems.map(item => (\n          <Item key={item?.id || '-'} item={item} onSearch={onSearch} />\n        ))}\n      </ul>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 2;\n  font-size: ${sc.fontSizeSmaller};\n`\n","import React, { ChangeEvent } from 'react'\nimport styled from 'styled-components'\nimport { TextInput } from 'src/components'\nimport { useData } from 'src/context'\nimport { sc } from 'src/styles'\nimport { DataItem } from 'src/types'\n\nimport { getQuestQuant, getHideoutQuant } from '../helpers'\n\ntype Props = {\n  item: DataItem\n}\n\nexport default ({ item }: Props) => {\n  const { data, add, update } = useData()\n\n  const onAdd = () => add(item.id)\n\n  const onChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const val = ev.target.value\n\n    if (!val) {\n      update(item.id, 0)\n    } else {\n      update(item.id, Number(val))\n    }\n  }\n\n  return (\n    <>\n      <span>\n        {item.name} ({item.shortName})\n      </span>\n      <Actions>\n        <DoneInput value={String(data[item.id] || 0)} onChange={onChange} />\n\n        <Total type=\"quest\" onClick={onAdd}>\n          {getQuestQuant(item)}\n        </Total>\n\n        <Total type=\"hideout\" onClick={onAdd}>\n          {getHideoutQuant(item)}\n        </Total>\n      </Actions>\n    </>\n  )\n}\n\nconst Actions = styled.div`\n  display: flex;\n  gap: ${sc.spacing(1)};\n`\n\nconst Total = styled.div<{\n  type: 'quest' | 'hideout'\n}>`\n  width: ${sc.spacing(6)};\n  height: ${sc.spacing(6)};\n  line-height: ${sc.spacing(5.5)};\n  color: ${sc.fontContrast};\n  font-weight: 600;\n  border-radius: 3px;\n  background-color: ${props =>\n    props.type === 'quest' ? sc.quest : sc.hideout};\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n`\n\nconst DoneInput = styled(TextInput)`\n  width: ${sc.spacing(6)};\n  border-radius: 4px;\n  text-align: center;\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { sc } from 'src/styles'\nimport { TextInput } from 'src/components'\nimport { DataItem } from 'src/types'\nimport items from 'src/data.json'\n\nimport Collected from './Collected'\nimport ResultItem from './ResultItem'\n\nconst App = () => {\n  const [search, setSearch] = useState('')\n  const [results, setResults] = useState<DataItem[]>([])\n\n  const onSearch = (value: string) => {\n    setSearch(value)\n\n    if (!value) {\n      setResults([])\n    } else {\n      const filtered: DataItem[] = (items as DataItem[]).filter(\n        item => compare(item.shortName, value) || compare(item.name, value)\n      )\n      setResults(filtered)\n    }\n  }\n\n  return (\n    <Container>\n      <Collected onSearch={onSearch} />\n\n      <Search>\n        <TextInput value={search} onChange={ev => onSearch(ev.target.value)} />\n\n        {results.length ? (\n          <Results>\n            {results.map((item: DataItem) => (\n              <li key={item.id}>\n                <ResultItem item={item} />\n              </li>\n            ))}\n          </Results>\n        ) : null}\n      </Search>\n    </Container>\n  )\n}\n\nexport default App\n\nconst compare = (str1: string, str2: string): boolean => {\n  return str1.toLowerCase().includes(str2.toLowerCase())\n}\n\nconst Container = styled.div`\n  display: flex;\n  gap: ${sc.spacing(2)};\n  padding: ${sc.spacing(3)};\n`\n\nconst Search = styled.div`\n  flex: 6;\n`\n\nconst Results = styled.ul`\n  margin-top: ${sc.spacing(2)};\n  border: 1px solid ${sc.secondary};\n\n  & > li {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: ${sc.spacing(1)};\n    padding-left: ${sc.spacing(2)};\n  }\n`\n","import React, { useState } from 'react'\nimport { DataProvider } from './context'\nimport { StorageData } from './types'\nimport App from './views/App'\n\n// TODO: constants\nconst storage: StorageData = JSON.parse(\n  localStorage.getItem('tarkov-tracker-data') || '{}'\n)\n\nexport default () => {\n  const [data, setData] = useState(storage)\n\n  return (\n    <DataProvider value={{ data, setData }}>\n      <App />\n    </DataProvider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Client from './client'\nimport { GlobalStyle } from './styles'\n\nimport 'normalize.css/normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Client />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}